[{"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\TextInputs.js":"4","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\store.js":"5","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\TextInput.js":"6","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\index.js":"7","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\TextInput.js":"8","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\api.js":"9","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\ListForms.js":"10","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\Input.js":"11","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\Input.js":"12","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\useForm.js":"13","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Text.js":"14","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Number.js":"15","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Dropdown.js":"16","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\CheckBoxes.js":"17","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Radio.js":"18"},{"size":500,"mtime":1609098544727,"results":"19","hashOfConfig":"20"},{"size":6495,"mtime":1609155712128,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":13279,"mtime":1609155244961,"results":"23","hashOfConfig":"20"},{"size":333,"mtime":1608802126972,"results":"24","hashOfConfig":"20"},{"size":1584,"mtime":1609120594466,"results":"25","hashOfConfig":"20"},{"size":192,"mtime":1608981715618,"results":"26","hashOfConfig":"20"},{"size":750,"mtime":1609022726591,"results":"27","hashOfConfig":"20"},{"size":660,"mtime":1609120605970,"results":"28","hashOfConfig":"20"},{"size":3217,"mtime":1609155776040,"results":"29","hashOfConfig":"20"},{"size":771,"mtime":1609022605916,"results":"30","hashOfConfig":"20"},{"size":1142,"mtime":1608983426294,"results":"31","hashOfConfig":"20"},{"size":698,"mtime":1609022564175,"results":"32","hashOfConfig":"20"},{"size":252,"mtime":1609089382083,"results":"33","hashOfConfig":"20"},{"size":306,"mtime":1609087927533,"results":"34","hashOfConfig":"20"},{"size":936,"mtime":1609077095223,"results":"35","hashOfConfig":"20"},{"size":1776,"mtime":1609097956210,"results":"36","hashOfConfig":"20"},{"size":906,"mtime":1609103984766,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"otpssp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\index.js",[],["80","81"],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\TextInputs.js",["82","83","84","85","86"],"import { List,Grid , Paper, withStyles,Button ,TextField } from \"@material-ui/core\";\r\nimport React,{useEffect,useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../actions/Input\"\r\nimport * as actions from \"../actions/TextInput\"\r\nimport useForm from \"./useForm\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'; \r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Text from \"./Type/Text\";\r\nimport Number from \"./Type/Number\";\r\nimport Radio from \"./Type/Radio\";\r\nimport Dropdown from \"./Type/Dropdown\";\r\nimport CheckBoxes from \"./Type/CheckBoxes\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst intialForm ={\r\n    title:'',\r\n    description:''\r\n}\r\n\r\nconst styles = theme => ({\r\n    paper :{\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n      posBTN :{\r\n          justifyContent :'center',\r\n          width:\"50%\"\r\n      },\r\n      root: {\r\n        width: '100%',\r\n        paddingBottom:'5px',\r\n        backgroundColor: theme.palette.background.paper,\r\n      },\r\n      nested: {\r\n        paddingLeft: theme.spacing(4),\r\n      },\r\n      input:{\r\n          padding: theme.spacing(6),\r\n      }\r\n})\r\n\r\nconst TextInputs = ({classes, ...props}) =>{\r\n \r\n\r\n  const[ListInput,setListInput] = useState([])\r\n    \r\n    const [option1 ,setOption1]= useState([])\r\n\r\n    const addOption1 = ()=>{\r\n        setOption1([...option1,''])  \r\n    }\r\n    const removeOption1 = ()=>{\r\n        const values  = [...option1];\r\n        values.splice(values.i, 1);\r\n        setOption1(values);\r\n    }\r\n    const renderOption1 =() =>{\r\n        return <React.Fragment> <Text placeholder={\"option..\"}/>  <Divider variant=\"middle\" />  </React.Fragment>\r\n    }\r\n\r\n    const [option2 ,setOption2]= useState([])\r\n\r\n    const addOption2 = ()=>{\r\n        setOption2([...option1,''])  \r\n    }\r\n    const removeOption2 = ()=>{\r\n        const values  = [...option2];\r\n        values.splice(values.i, 1);\r\n        setOption2(values);\r\n    }\r\n    const renderOption2 =() =>{\r\n        return <React.Fragment> <Text placeholder={\"option..\"}/>  <Divider variant=\"middle\" /> </React.Fragment>\r\n    }\r\n\r\n    const [option3 ,setOption3]= useState([])\r\n\r\n    const addOption3 = ()=>{\r\n        setOption3([...option1,''])  \r\n    }\r\n    const removeOption3 = ()=>{\r\n        const values  = [...option3];\r\n        values.splice(values.i, 1);\r\n        setOption3(values);\r\n    }\r\n    const renderOption3 =() =>{\r\n        return <React.Fragment> <Text placeholder={\"option..\"}/>  <Divider variant=\"middle\" /> </React.Fragment>\r\n    }\r\n\r\n    const renderInput = type =>{\r\n        switch (type) {\r\n          case \"Input_Text\":\r\n             return <React.Fragment> <Text placeholder={\"question ..\"} />  <Divider variant=\"middle\" />  </React.Fragment>;\r\n          case \"Input_Number\":\r\n            return <React.Fragment> <Text placeholder={\"question ..\"}/> <Divider variant=\"middle\" /></React.Fragment>;\r\n          case \"Input_Email\":\r\n            return <React.Fragment> <Text placeholder={\"question ..\"}/> <Divider variant=\"middle\" /> </React.Fragment>;\r\n          case \"Dropdown\":\r\n            return <React.Fragment> <Text placeholder={\"question ..\"}/> \r\n                   <Text placeholder={\"option ..\"}  /> \r\n                                {option1.map((i) => ( \r\n                                            <React.Fragment key={i}>\r\n                                            {\r\n                                                    renderOption1()\r\n                                            }\r\n                                            </React.Fragment> ))\r\n                                }\r\n                                <IconButton onClick={() => removeOption1()}>\r\n                                <RemoveIcon />\r\n                                </IconButton>\r\n                                <IconButton onClick={() => addOption1()}>\r\n                                <AddIcon  />\r\n                                </IconButton>\r\n            </React.Fragment>;\r\n          case \"CheckBoxes\":\r\n            return <React.Fragment> <Text placeholder={\"question ..\"}/> \r\n                        <Text placeholder={\"option ..\"}  /> \r\n                        {option2.map((i) => ( \r\n                                    <React.Fragment key={i}>\r\n                                    {\r\n                                            renderOption2()\r\n                                    }\r\n                                    </React.Fragment> ))\r\n                        }\r\n                        <IconButton onClick={() => removeOption2()}>\r\n                           <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => addOption2()}>\r\n                           <AddIcon  />\r\n                        </IconButton>\r\n                    </React.Fragment>;\r\n          case \"Radio\":\r\n            return <React.Fragment> <Text placeholder={\"question ..\"}/> \r\n                        <Text placeholder={\"option ..\"}  /> \r\n                                    {option3.map((i) => ( \r\n                                                <React.Fragment key={i}>\r\n                                                {\r\n                                                        renderOption3()\r\n                                                }\r\n                                                </React.Fragment> ))\r\n                                    }\r\n                                    <IconButton onClick={() => removeOption3()}>\r\n                                    <RemoveIcon />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={() => addOption3()}>\r\n                                    <AddIcon  />\r\n                                    </IconButton>\r\n            </React.Fragment>;\r\n          default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    const addInput = (type) => {\r\n        setListInput([...ListInput , {question :'',\r\n          idform:'',\r\n          options:[],\r\n          type:type\r\n        }\r\n        ])\r\n    } \r\n\r\n    const validate =  ()=>{\r\n        let temp ={...errors}\r\n        temp.title = values.title?\"\":\"This field is required .\"\r\n        temp.description = values.description?\"\":\"This field is required .\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x===\"\")\r\n    }\r\n    var {\r\n        values,\r\n        errors,\r\n        setErrors,\r\n        inputChange\r\n\r\n    } = useForm(intialForm)\r\n\r\n    useEffect(()=> {\r\n        props.createInput()\r\n    },[])\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        const onSuccess =()=>{ window.alert('Added Successfuly')}\r\n        if(validate())\r\n        props.createForm(values,onSuccess)\r\n        values.title=''\r\n        values.description=''\r\n        //console.log(\"test\")\r\n    }\r\n    return (\r\n        <Grid container >\r\n           \r\n            <Grid item xs={9}>\r\n                <Paper elevation={3} className={classes.paper} >\r\n                    <form  className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                        <TextField \r\n                            id=\"standard-secondary\" \r\n                            label=\"Add Title\"\r\n                            color=\"primary\"\r\n                            name=\"title\" \r\n                            value={values.title}\r\n                            onChange={inputChange}\r\n                            {...(errors.title && {error:true,helperText:errors.title})}\r\n                            />\r\n                        <TextField \r\n                            id=\"standard-secondary\" \r\n                            label=\"Add Description ..\"\r\n                            color=\"primary\" \r\n                            name=\"description\"\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth \r\n                            value={values.description}\r\n                            onChange={inputChange}\r\n                            {...(errors.description && {error:true,helperText:errors.description})}\r\n                            />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                        >Save form \r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper} >\r\n                    <List>\r\n                       <form>\r\n                       {\r\n                        ListInput.map((input,i) => ( \r\n                        <React.Fragment key={i} className={classes.input}>\r\n                        {\r\n                                renderInput(input.type) \r\n                                \r\n                        }\r\n                        </React.Fragment> ))\r\n                        }\r\n                        <br></br> \r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            type='submit'\r\n                            size=\"large\"\r\n                            >\r\n                            Send\r\n                        </Button>\r\n                       </form>\r\n                    </List>\r\n                </Paper> \r\n            </Grid>\r\n            \r\n            <Grid item xs={3}>\r\n                <Paper elevation={3}  className={classes.paper} >\r\n                    <List\r\n                        component=\"nav\"\r\n                        aria-labelledby=\"nested-list-subheader\"\r\n                        subheader={\r\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                            <b>ToolBoxes</b>\r\n                            </ListSubheader>\r\n                        }\r\n                        className={classes.root}\r\n                        >\r\n                        <ListItem button onClick={()=> addInput(\"Input_Text\")}>\r\n                            <ListItemIcon>\r\n                            <TextFieldsIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Input Text\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => addInput(\"Input_Number\")}>\r\n                            <ListItemIcon>\r\n                            <FormatListNumberedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Input Number\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => addInput(\"Input_Email\")}>\r\n                            <ListItemIcon>\r\n                            <EmailIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Input Email\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => addInput(\"Dropdown\")}>\r\n                            <ListItemIcon>\r\n                            <ArrowDropDownCircleIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Dropdown\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => addInput(\"CheckBoxes\")}>\r\n                            <ListItemIcon>\r\n                            <CheckBoxIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"CheckBoxes\" />\r\n                        </ListItem>\r\n                        <ListItem button  onClick={() => addInput(\"Radio\")}>\r\n                            <ListItemIcon>\r\n                            <CheckCircleIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Radio\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </Paper>  \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    TextInputList: state.Input.listInput,\r\n    FormList: state.TextInput.list\r\n}) \r\nconst mapActionToProps = {\r\n    createForm : actions.create,\r\n    createInput : action.createInput,\r\n    DeleteInput : action.DeleteInput\r\n}\r\n\r\n//props.fetchAllTextInputs\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(TextInputs));\r\n\r\n","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\store.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\TextInput.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\TextInput.js",[],["87","88"],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\api.js",["89"],"import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:7000/'\r\n\r\nexport default {\r\n    TextInput(url = baseUrl + 'Form/AllForms') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    },\r\n    Input(url = baseUrl + 'Form') {\r\n        return {\r\n            fetchAllInput: idform => axios.get(url + idform),\r\n            createInput: newRecord => axios.post(url+'/AddInput', newRecord),\r\n            DeleteInput: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\ListForms.js",["90"],"import React,{useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/TextInput\";\r\nimport { List, withStyles} from \"@material-ui/core\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop:100,\r\n        maxWidth: 300,\r\n        \r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n      }\r\n})\r\nconst Forms = ({classes, ...props}) =>{\r\n    useEffect(()=> {\r\n        props.fetchAllForms()\r\n    },[])\r\n    const fetchForm = id =>{\r\n        console.log(id)\r\n        props.fetchFormById()\r\n    }\r\n    return (\r\n        <div>\r\n            <List>\r\n                    <Card className={classes.root}>\r\n                        <CardActionArea>\r\n                            <CardContent >\r\n                            <AddIcon fontSize=\"large\"/>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                                <b>New Form</b>\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n            </List>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead  >\r\n          <TableRow  >\r\n            <TableCell >ID</TableCell>\r\n            <TableCell >Title</TableCell>\r\n            <TableCell >Description</TableCell>\r\n            <TableCell >Get Form</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.FormList.map((record, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell >{index}</TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                   {record.title}\r\n              </TableCell>\r\n              <TableCell >{record.description}</TableCell>\r\n              <TableCell >\r\n                  <Button size=\"small\" color=\"primary\" onClick={() => fetchForm()}>\r\n                        <b>View Form</b>\r\n                  </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    FormList : state.TextInput.list\r\n}) \r\nconst mapActionToProps = {\r\n    fetchAllForms: actions.fetchAll,\r\n    fetchFormById: actions.fetchById,\r\n    deleteForm: actions.Delete\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(Forms));","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\reducers\\Input.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\actions\\Input.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\useForm.js",["91"],"import React,{useState} from \"react\";\r\n\r\n\r\nconst useForm = (intialForm => {\r\n    const[values,setValues] = useState(intialForm) \r\n    const[errors,setErrors] = useState(intialForm)\r\n    const inputChange=e =>{\r\n        const {name,value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name] :value\r\n        })\r\n    }\r\n    \r\n    //const [errors, setErrors] = useState({})\r\n\r\n    // const resetForm =() =>{\r\n    //     setValues(initialFieldValues)\r\n    //     setErrors({})\r\n    //     setCurrentId(0)\r\n    // }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        inputChange\r\n    };\r\n})\r\n\r\nexport default useForm ;\r\n\r\n\r\n        ","C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Text.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Number.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Dropdown.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\CheckBoxes.js",[],"C:\\Users\\ASUS\\Desktop\\Arsela\\front\\src\\components\\Type\\Radio.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":16},{"ruleId":"96","severity":1,"message":"102","line":21,"column":8,"nodeType":"98","messageId":"99","endLine":21,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":197,"column":7,"nodeType":"105","endLine":197,"endColumn":9,"suggestions":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":1,"nodeType":"111","endLine":22,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":33,"column":7,"nodeType":"105","endLine":33,"endColumn":9,"suggestions":"112"},{"ruleId":"96","severity":1,"message":"113","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":13},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Number' is defined but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'Dropdown' is defined but never used.","'CheckBoxes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["116"],["114"],["115"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["117"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},"Update the dependencies array to be: [props]",{"range":"121","text":"122"},{"range":"123","text":"122"},[7328,7330],"[props]",[1135,1137]]